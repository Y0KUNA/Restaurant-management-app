package View;

import DAO.DishDAO;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.Dish;
import model.Order;
import model.OrderedDish;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author Admin
 */
public class AddOrder extends javax.swing.JDialog {

    /**
     * Creates new form AddOrder
     */
   
    private ReceiptFrm parentFrm;
    
    private Order order;
    public AddOrder(ReceiptFrm parentFrm, Order order, int mode) {
        
        this.parentFrm = parentFrm;
        
        this.order = order;
        initComponents();
        tblDishList.getColumnModel().getColumn(4).setCellRenderer(new MultiLineCellRenderer());
    }
    public DefaultTableModel loadTableModel() {
        String[] columnNames = { "ID", "Name", "Type", "Price", "Description", "Quantity" };
        DefaultTableModel model = new DefaultTableModel(columnNames, 0) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 5) return Integer.class;
                return String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 5; // Chỉ cột số lượng có thể chỉnh sửa
            }
        };

        DishDAO dd = new DishDAO();
        List<Dish> dishList = dd.getDishList();

        List<OrderedDish> orderedDishes = order.getOd() != null ? order.getOd() : new ArrayList<>();

        for (Dish dish : dishList) {
            int quantity = 0;

            // Tìm món ăn này trong danh sách OrderedDish của order
            for (OrderedDish od : orderedDishes) {
                if (od.getD().getId() == dish.getId()) {
                    quantity = od.getQuantity();
                    break;
                }
            }

            Object[] rowData = {
                dish.getId(),
                dish.getName(),
                dish.getType(),
                dish.getPrice(),
                dish.getDes(),
                quantity
            };
            model.addRow(rowData);
        }

        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDishList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnUpdate.setText("jButton1");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblDishList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDishList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnUpdate)
                        .addGap(127, 127, 127))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblDishList.getModel();
        List<OrderedDish> pickedDish = new ArrayList<>();

        for (int i = 0; i < model.getRowCount(); i++) {
            OrderedDish od = new OrderedDish();
            od.setOrderTime(LocalDateTime.now());

            Dish d = new Dish();
            d.setId(Integer.parseInt(model.getValueAt(i, 0).toString()));
            d.setName((String) model.getValueAt(i, 1));
            d.setType((String) model.getValueAt(i, 2));

            // ---- Xử lý giá món ăn an toàn ----
            Object priceObj = model.getValueAt(i, 3);
            int price = 0;
            if (priceObj != null) {
                try {
                    if (priceObj instanceof Integer) {
                        price = (Integer) priceObj;
                    } else {
                        price = Integer.parseInt(priceObj.toString());
                    }
                } catch (NumberFormatException e) {
                    System.err.println("Lỗi chuyển đổi giá món ăn ở dòng " + i + ": " + priceObj);
                }
            }
            d.setPrice(price);
            // ----------------------------------

            d.setDes((String) model.getValueAt(i, 4));
            od.setD(d);

            // Xử lý quantity
            int quantity = 0;
            try {
                quantity = Integer.parseInt(model.getValueAt(i, 5).toString());
            } catch (Exception e) {
                System.err.println("Lỗi chuyển đổi số lượng ở dòng " + i + ": " + model.getValueAt(i, 5));
            }
            od.setQuantity(quantity);

            if (quantity > 0) {
                pickedDish.add(od);
            }
        }

        this.order.setOd(pickedDish);
        this.order.setPaid(false);
        System.out.println("check");
        for (OrderedDish dish: order.getOd()){
            System.out.println(dish.getPrice());
        }
        parentFrm.loadTableModel(this.order.getOd()); // Cập nhật bảng món ăn
        parentFrm.setData(order); // Cập nhật tổng tiền, thông tin lại
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                AddOrder dialog = new AddOrder(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDishList;
    // End of variables declaration//GEN-END:variables
}
